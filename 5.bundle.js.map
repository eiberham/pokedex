{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack:///./src/components/SearchBar.jsx"],"names":["arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","module","exports","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","Section","styled","section","SearchBar","props","useState","query","setQuery","data-testid","onSubmit","e","preventDefault","handleSearch","type","placeholder","onChange","target"],"mappings":"4EAAA,IAAIA,EAAiB,EAAQ,IAEzBC,EAAuB,EAAQ,IAE/BC,EAA6B,EAAQ,IAErCC,EAAkB,EAAQ,IAM9BC,EAAOC,QAJP,SAAwBC,EAAKC,GAC3B,OAAOP,EAAeM,IAAQL,EAAqBK,EAAKC,IAAML,EAA2BI,EAAKC,IAAMJ,M,iBCLtGC,EAAOC,QAJP,SAAyBC,GACvB,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,I,iBC0BjCF,EAAOC,QA3BP,SAA+BC,EAAKC,GAClC,GAAsB,oBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,K,iBCpBTT,EAAOC,QAJP,WACE,MAAM,IAAIqB,UAAU,+I,iZCEtB,IAAMC,E,MAAUC,EAAOC,QAAV,KAmCEC,UAvBG,SAACC,GAAU,MACCC,mBAAS,IADV,WAClBC,EADkB,KACXC,EADW,KAQzB,OACI,kBAACP,EAAD,KACI,0BAAMQ,cAAY,OAAOC,SAPZ,SAACC,GAClBA,EAAEC,iBACFP,EAAMQ,aAAaN,KAMX,2BACIO,KAAK,OACLC,YAAY,mBACZlB,MAAOU,EACPS,SAAU,SAACL,GAAD,OAAOH,EAASG,EAAEM,OAAOpB,UAEvC,4BAAQY,cAAY,aAAaK,KAAK,UAAtC","file":"5.bundle.js","sourcesContent":["var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","import React, { useState } from \"react\";\nimport styled from '@emotion/styled';\n\nconst Section = styled.section `\n    margin: 5rem auto 0 auto;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: #302D2F;\n    width: 40vw;\n    height: 15vh;\n    border-top-left-radius: 0.8rem;\n    border-top-right-radius: 0.8rem;\n`;\n\nconst SearchBar = (props) => {\n    const [query, setQuery] = useState('');\n\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        props.handleSearch(query);\n    };\n\n    return (\n        <Section>\n            <form data-testid=\"form\" onSubmit={onFormSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Search a pokÃ©mon\"\n                    value={query}\n                    onChange={(e) => setQuery(e.target.value)}\n                />\n                <button data-testid=\"btn-submit\" type=\"submit\">Search</button>\n            </form>\n        </Section>\n    )\n}\n\nexport default SearchBar;"],"sourceRoot":""}