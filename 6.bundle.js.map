{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./src/components/Pokelist/PokeList.jsx"],"names":["arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","module","exports","arr","arrayLikeToArray","Array","isArray","iter","Symbol","iterator","Object","from","TypeError","PokeItem","lazy","Header","Section","styled","animated","section","Wrap","span","withRouter","history","props","useSpring","opacity","handleClick","name","push","pathname","style","data-testid","map","e","id","fallback","key","toString"],"mappings":"4EAAA,IAAIA,EAAoB,EAAQ,IAE5BC,EAAkB,EAAQ,IAE1BC,EAA6B,EAAQ,IAErCC,EAAoB,EAAQ,IAMhCC,EAAOC,QAJP,SAA4BC,GAC1B,OAAON,EAAkBM,IAAQL,EAAgBK,IAAQJ,EAA2BI,IAAQH,M,mBCT9F,IAAII,EAAmB,EAAQ,IAM/BH,EAAOC,QAJP,SAA4BC,GAC1B,GAAIE,MAAMC,QAAQH,GAAM,OAAOC,EAAiBD,K,iBCClDF,EAAOC,QAJP,SAA0BK,GACxB,GAAsB,oBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOF,MAAMM,KAAKJ,K,iBCG1FN,EAAOC,QAJP,WACE,MAAM,IAAIU,UAAU,0I,ywBCItB,IAAMC,EAAWC,gBAAK,kBAAM,sDACtBC,EAASD,gBAAK,kBAAM,sDAIpBE,EAAUC,YAAOC,IAASC,QAAhBF,CAAH,KAcPG,EAAOH,IAAOI,KAAV,KAkCKC,uBAvBE,SAAC,GAAc,IAAbC,EAAa,EAAbA,QACTC,EAAQC,YAAU,CAACC,QAAS,EAAGf,KAAM,CAACe,QAAS,KAE/CC,EAAc,SAACC,GACjBL,EAAQM,KAAK,CACTC,SAAU,YAAF,OAAcF,MAI9B,OACI,kBAACZ,EAAD,CAASe,MAAOP,EAAOQ,cAAY,cAC/B,kBAACZ,EAAD,KACI,kBAACL,EAAD,OAEH,IAAIV,MAAM,MAAM4B,KAAK,SAACC,EAAEC,GAAH,OAClB,kBAAC,WAAD,CAAUC,SA1CC,sCA0CyBC,IAAKF,EAAGG,YACxC,kBAACzB,EAAD,CAAUsB,IAAKA,EAAK,GAAGG,WAAYX,YAAaA","file":"6.bundle.js","sourcesContent":["var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","import React, { lazy, Suspense } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport styled from '@emotion/styled';\nimport {useSpring, animated} from 'react-spring';\n\nconst PokeItem = lazy(() => import('../PokeItem'));\nconst Header = lazy(() => import('../Header'));\n\nconst renderLoader = () => <p>Loading</p>;\n\nconst Section = styled(animated.section) `\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    flex-wrap: wrap;\n    background-color: white;\n    padding-top: 0px;\n    width: 100vw;\n    height: 100vh;\n    margin: 0 auto;\n    border: 6px solid black;\n    overflow-y: scroll;\n`;\n\nconst Wrap = styled.span `\n    position: relative;\n    top: 0;\n    margin: 0 0 3rem 0;\n    width: 100%;\n    background: black;\n    height: 356px;\n    clip-path: polygon(50% 0%, 100% 0, 100% 26%, 100% 64%, 65% 64%, 38% 100%, 0 100%, 0% 43%, 0 0);\n    border-bottom: 6px solid black;\n`;\n\nconst PokeList = ({history}) => {\n    const props = useSpring({opacity: 1, from: {opacity: 0}});\n\n    const handleClick = (name) => {\n        history.push({\n            pathname: `/pokemon/${name}`\n        })\n    };\n\n    return (\n        <Section style={props} data-testid=\"list-items\">\n            <Wrap>\n                <Header />\n            </Wrap>\n            {[...Array(151)].map( (e,id) => (\n                <Suspense fallback={renderLoader()} key={id.toString()}>\n                    <PokeItem id={(id + 1).toString()} handleClick={handleClick}/>\n                </Suspense>\n            ))}\n        </Section>\n    )\n};\n\nexport default withRouter(PokeList);"],"sourceRoot":""}